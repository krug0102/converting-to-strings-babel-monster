{"version":3,"sources":["check/async.cljs"],"mappings":"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","names":["check.async/to-promise","promise-or-chan","cljs.core/PROTOCOL_SENTINEL","cljs.core/native-satisfies?","cljs.core.async.impl.protocols/ReadPort","p","promesa.core/deferred","c__39769__auto__","cljs.core.async.chan","cljs.core.async.impl.dispatch/run","f__39770__auto__","switch__39694__auto__","state_96801","state_val_96802","cljs.core.async.impl.ioc-helpers/take!","inst_96798","inst_96799","cljs.core.async.impl.ioc-helpers/return-chan","statearr-96812","state-machine__39695__auto__","ret-value__39696__auto__","result__39697__auto__","cljs.core/keyword-identical?","ex__39698__auto__","e96814","statearr-96815","cljs.core/seq","statearr-96816","cljs.core/first","state__39771__auto__","statearr-96818","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","promesa.core.resolve_BANG_","check.async/AsyncTest","check.async/reified-async-prom","prom","js/check","js/check.async","js/check.async.t_check$async96822","check.async/t_check$async96822","_96824","meta96823","self__","args96827","cljs.core/aclone","this__4461__auto__","writer__4462__auto__","opt__4463__auto__","cljs.core/-write","check.async/->t_check$async96822","_","done","promesa.core.finally$","f","promesa.protocols/-bind","executor","promesa.protocols/-map","promesa.protocols/-then","promesa.protocols/-mapErr","promesa.protocols/-thenErr","promesa.protocols/-handle","promesa.protocols/-finally","check.async/async-test*","description","timeout","teardown","timeout-error","js/Object","error","promise","p1__96861#","promesa.core.catch$","cljs.core/PersistentVector","timeout-prom","___56267__auto__","___56266__auto__","promesa.protocols/-promise","promesa.core.delay","full-prom","promesa.core/race","promesa.core.then","res","cljs.core/vector?","cljs.core._EQ_","cljs.test/do-report","cljs.core/second","check.core/normalize-error","values__9152__auto__","cljs.core/List","result__9153__auto__","cljs.core.apply","cljs.test/report","cljs.core/cons","t__9189__auto__","e96881","cljs.core/not"],"sourcesContent":["(ns check.async\n  (:require-macros [check.async])\n  (:require [clojure.string :as str]\n            [check.core :as core]\n            [clojure.test :as test]\n            [cljs.test]\n            [clojure.core.async :as async]\n            [promesa.core :as p]\n            [cljs.core.async.impl.protocols :as proto]\n            [promesa.protocols :as promesa-proto]))\n\n(defn to-promise [promise-or-chan]\n  (if (satisfies? proto/ReadPort promise-or-chan)\n    (let [p (p/deferred)]\n      (async/go\n        (let [res (async/<! promise-or-chan)]\n          (p/resolve! p res)))\n      p)\n    promise-or-chan))\n\n(defprotocol AsyncTest)\n\n(defn- reified-async-prom [prom]\n  (reify\n    AsyncTest\n    cljs.test/IAsyncTest\n    cljs.core/IFn\n    (-invoke [_ done] (p/finally prom (fn [ & _] (done))))\n    promesa-proto/IPromise\n    (-bind [_ f] (promesa-proto/-bind prom f))\n    (-bind [_ f executor] (promesa-proto/-bind prom f executor))\n    (-map [_ f] (promesa-proto/-map prom f))\n    (-map [_ f executor] (promesa-proto/-map prom f executor))\n    (-then [_ f] (promesa-proto/-then prom f))\n    (-then [_ f executor] (promesa-proto/-then prom f executor))\n    (-mapErr [_ f] (promesa-proto/-mapErr prom f))\n    (-mapErr [_ f executor] (promesa-proto/-mapErr prom f executor))\n    (-thenErr [_ f] (promesa-proto/-thenErr prom f))\n    (-thenErr [_ f executor] (promesa-proto/-thenErr prom f executor))\n    (-handle [_ f] (promesa-proto/-handle prom f))\n    (-handle [_ f executor] (promesa-proto/-handle prom f executor))\n    (-finally [_ f] (promesa-proto/-finally prom f))\n    (-finally [_ f executor] (promesa-proto/-finally prom f executor))))\n\n(defn async-test* [description timeout teardown prom]\n  (let [timeout-error (js/Object.)\n        error (js/Object.)\n        promise (p/catch prom #(vector error %))\n        timeout-prom (p/do!\n                      (p/delay timeout)\n                      timeout-error)\n\n        full-prom\n        (-> (p/race [promise timeout-prom])\n            (p/then (fn [res]\n                      (cond\n                        (and (vector? res) (-> res first (= error)))\n                        (do\n                          (test/do-report {:type :error\n                                           :expected \"Not an error\"\n                                           :actual (-> res second core/normalize-error)}))\n\n                        (= timeout-error res)\n                        (test/do-report {:type :error\n                                         :expected \"Test to finish\"\n                                         :actual (core/normalize-error\n                                                  (str \"Test did \"\"not finish in \"\n                                                       timeout \"msec\"))}))\n\n                      (teardown)))\n            (p/catch (fn [error] (test/is (not error)) nil)))]\n    (reified-async-prom full-prom)))\n"]}