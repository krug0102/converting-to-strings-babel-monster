{"version":3,"sources":["pinkgorilla/ui/jsrender.cljs"],"mappings":";AAUA,+BAAA,/BAAMA,sEAAMC;AAAZ,AACE,OAAMC,YAAWD;;AAEnB,+CAAA,uDAAAE,tGAAMI;AAAN,AAAA,IAAAH,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;QAAA,AAAAE,4CAAAF,eAAA,/DACWI;WADX,AAAAF,4CAAAF,eAAA,lEACaK;AADb,AAEE,IAAMC,OAAK,AAACC,iCAAiB,AAACC;AAA9B,AACE,iCAAA,2CAAA,oEAAA,kBAAA,3JAACC,oOAEiB;AAAA,AAAA,0FAAA,mDAAA,2CAAA,kDAAkBH;GAFpC,oFAGuB,WAAKI;AAAL,AAEE,IAAAC,WAAG,AAACE,qBAAqBH;IAAzBE,WAA+BP;AAA/B,AAAA,0EAAAM,SAAAC,wBAAAD,SAAAC,5GAACR,kCAAAA,qDAAAA;GAL1B,sFAWyB,iBAAAU,NAAKJ;AAAL,AAAA,IAAAK,aAAAD;QAAA,AAAAE,4CAAAD,WAAA,IAAA,/DAAWG;IAAXD,aAAA,AAAAD,4CAAAD,WAAA,IAAA;IAAAE,iBAAA,AAAAhB,4BAAAgB;YAAA,AAAAf,4CAAAe,eAAA,nEAAqBb;eAArB,AAAAF,4CAAAe,eAAA,tEAAuBZ;AAAvB,AAEE,AAACT,6BAAK,CAAA,oEAA6BS;;AACnC,IAAAc,WAAG,AAACN,qBAAqBH;IAAzBU,WAA+Bf;AAA/B,AAAA,kFAAAc,SAAAC,4BAAAD,SAAAC,xHAAChB,sCAAAA,yDAAAA;;;AAEhC,qCAAA,rCAAMiB,kFAAYhB;AAAlB,AAAA,8HAAA,pCACGiB,uHACCnB,6CAAqBE;;AAEzB,oCAAA,4CAAAkB,hFAAME;AAAN,AAAA,IAAAD,aAAAD;IAAAC,iBAAA,AAAAvB,4BAAAuB;QAAA,AAAAtB,4CAAAsB,eAAA,/DAAyBpB;WAAzB,AAAAF,4CAAAsB,eAAA,lEAA2BnB;AAA3B,AACE,cAAA,2CAAA,kDAAA,vGAAMqB,qGAAYtB,uDAAQ,AAACuB,qBAAQtB;AAAnC,AAAA,0FACGgB,mCAAWK","names":["pinkgorilla.ui.jsrender/info","s","js/console","p__89454","map__89455","cljs.core/--destructure-map","cljs.core.get","pinkgorilla.ui.jsrender/render-function-impl","f","data","uuid","cljs-uuid-utils.core/uuid-string","cljs-uuid-utils.core/make-random-uuid","reagent.core/create-class","this","G__89456","G__89457","reagent.dom/dom-node","p__89458","vec__89459","cljs.core.nth","map__89462","_","G__89463","G__89464","pinkgorilla.ui.jsrender/render-clj","pinkgorilla.ui.error/error-boundary","p__89465","map__89466","pinkgorilla.ui.jsrender/render-js","data-js","cljs.core/clj->js"],"sourcesContent":["(ns pinkgorilla.ui.jsrender\n  \"jsrender is part of a jsrequire based module system to render data via javascipt inside\n   reagent components. Typically custom ui renderers would use it:\n   [jsrender custom-module data]\"\n  (:require\n   [reagent.core :as reagent]\n   [reagent.dom]\n   [cljs-uuid-utils.core :as uuid]\n   [pinkgorilla.ui.error :refer [error-boundary]]))\n\n(defn info [s]\n  (.log js/console s))\n\n(defn render-function-impl\n  [{:keys [f data]}]\n  (let [uuid (uuid/uuid-string (uuid/make-random-uuid))]\n    (reagent/create-class\n     {:display-name \"render-function\"\n      :reagent-render (fn [] [:div {:id uuid}])\n      :component-did-mount (fn [this]\n                             ;(info (str \"jsrender init data: \" data))\n                             (f (reagent.dom/dom-node this) data))\n          ;:component-did-update (fn [this]\n          ;                        (run-script uuid data snippet))\n\n ;(let [[_ series-values] (reagent/argv this)]\n\n      :component-will-update (fn [this [_ {:keys [f data]}]]\n              ; with changing of parameters, re-render the component. (important for vega charts)\n                               (info (str \"jsrender new params: \" data))\n                               (f (reagent.dom/dom-node this) data))})))\n\n(defn render-clj [data]\n  [error-boundary\n   [render-function-impl data]])\n\n(defn render-js [{:keys [f data]}]\n  (let [data-js {:f f :data (clj->js data)}]\n    [render-clj data-js]))\n\n"]}