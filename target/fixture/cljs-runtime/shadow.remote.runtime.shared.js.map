{"version":3,"sources":["shadow/remote/runtime/shared.cljc"],"mappings":"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","names":["shadow.remote.runtime.shared/init-state","client-info","shadow.remote.runtime.shared/now","js/Date.now","shadow.remote.runtime.shared/relay-msg","runtime","msg","shadow.remote.runtime.api/relay-msg","p__144562","map__144564","cljs.core/--destructure-map","cljs.core.get","shadow.remote.runtime.shared/reply","call-id","from","res","G__144568","cljs.core.assoc","var_args","G__144585","shadow.remote.runtime.shared/call","js/Error","p__144588","map__144589","handlers","shadow.remote.runtime.shared.call","state-ref","timeout-after-ms","cljs.core/deref","cljs.core.swap_BANG_","cljs.core/update","cljs.core/inc","cljs.core/assoc-in","args__4835__auto__","len__4829__auto__","i__4830__auto__","argseq__4836__auto__","cljs.core/IndexedSeq","shadow.remote.runtime.shared/trigger!","p__144593","map__144594","seq144590","G__144591","cljs.core/first","cljs.core/next","G__144592","self__4816__auto__","ev","args","seq__144595","cljs.core/seq","chunk__144598","count__144599","i__144600","temp__5753__auto__","cljs.core/chunked-seq?","c__4649__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","ext","cljs.core/vals","ev-fn","cljs.core.apply","p__144607","p__144608","map__144615","map__144616","shadow.remote.runtime.shared/welcome","client-id","cljs.core/assoc","map__144621","extensions","shadow.remote.runtime.shared/ping","p__144639","map__144640","shadow.remote.runtime.shared/get-client-id","or__4223__auto__","cljs.core.ex_info","p__144646","map__144647","shadow.remote.runtime.shared/request-supported-ops","cljs.core/keys","cljs.core/set","cljs.core.disj","shadow.remote.runtime.shared/unknown-relay-op","js/console.warn","shadow.remote.runtime.shared/unknown-op","p__144650","p__144651","map__144652","map__144653","shadow.remote.runtime.shared/add-extension*","state","key","ops","spec","cljs.core/contains?","cljs.core/reduce-kv","op-kw","op-handler","cljs.core.get_in","p__144682","map__144683","shadow.remote.runtime.shared/add-extension","shadow.remote.runtime.shared/add-defaults","p1__144684#","p1__144685#","p1__144686#","p1__144687#","p1__144688#","shadow.remote.runtime.shared/del-extension*","cljs.core/not","cljs.core.update_in","cljs.core/dissoc","cljs.core.update","p__144707","map__144708","shadow.remote.runtime.shared/del-extension","shadow.remote.runtime.shared/unhandled-call-result","call-config","p__144709","map__144710","shadow.remote.runtime.shared/unhandled-client-not-found","shadow.remote.runtime.shared.trigger_BANG_","shadow.remote.runtime.shared/reply-unknown-op","p__144711","p__144712","map__144713","map__144714","shadow.remote.runtime.shared/process","op","cfg","call-handler","cljs.core._EQ_","shadow.remote.runtime.shared/run-on-idle","seq__144717","chunk__144719","count__144720","i__144721","map__144727","map__144746","on-idle"],"sourcesContent":["(ns shadow.remote.runtime.shared\n  (:require\n    [clojure.datafy :as d]\n    [clojure.pprint :refer (pprint)]\n    [shadow.remote.runtime.api :as p]\n    [shadow.remote.runtime.writer :as lw]\n    #?@(:clj\n        [[shadow.jvm-log :as log]]\n        :cljs\n        [])))\n\n(defn init-state [client-info]\n  {:extensions {}\n   :ops {}\n   :client-info client-info\n   :call-id-seq 0\n   :call-handlers {}})\n\n(defn now []\n  #?(:cljs (js/Date.now)\n     :clj (System/currentTimeMillis)))\n\n(defn relay-msg [runtime msg]\n  (p/relay-msg runtime msg))\n\n(defn reply [runtime {:keys [call-id from]} res]\n  (let [res (-> res\n                (cond->\n                  call-id\n                  (assoc :call-id call-id)\n                  from\n                  (assoc :to from)))]\n    (p/relay-msg runtime res)))\n\n(defn call\n  ([runtime msg handlers]\n   (call runtime msg handlers 0))\n  ([{:keys [state-ref] :as runtime}\n    msg\n    handlers\n    timeout-after-ms]\n   (let [call-id (:call-id-seq @state-ref)]\n     (swap! state-ref update :call-id-seq inc)\n     (swap! state-ref assoc-in [:call-handlers call-id]\n       {:handlers handlers\n        :called-at (now)\n        :msg msg\n        :timeout timeout-after-ms})\n     (p/relay-msg runtime (assoc msg :call-id call-id)))))\n\n(defn trigger! [{:keys [state-ref] :as runtime} ev & args]\n  (doseq [ext (vals (:extensions @state-ref))\n          :let [ev-fn (get ext ev)]\n          :when ev-fn]\n    (apply ev-fn args)))\n\n(defn welcome\n  [{:keys [state-ref] :as runtime} {:keys [client-id] :as msg}]\n  ;; #?(:cljs (js/console.log \"shadow.remote - runtime-id:\" rid))\n  (swap! state-ref assoc :client-id client-id)\n\n  (let [{:keys [client-info extensions]} @state-ref]\n    (relay-msg runtime\n      {:op :hello\n       :client-info client-info})\n\n    (trigger! runtime :on-welcome)))\n\n(defn ping\n  [runtime msg]\n  (reply runtime msg {:op :pong}))\n\n(defn get-client-id [{:keys [state-ref] :as runtime}]\n  (or (:client-id @state-ref)\n      (throw (ex-info \"runtime has no assigned runtime-id\" {:runtime runtime}))))\n\n(defn request-supported-ops\n  [{:keys [state-ref] :as runtime} msg]\n  (reply runtime msg\n    {:op :supported-ops\n     :ops (-> (:ops @state-ref)\n              (keys)\n              (set)\n              (disj :welcome :unknown-relay-op :unknown-op :request-supported-ops :tool-disconnect))}))\n\n(defn unknown-relay-op [msg]\n  #?(:cljs (js/console.warn \"unknown-relay-op\" msg)\n     :clj  (log/warn ::unknown-relay-op msg)))\n\n(defn unknown-op [msg]\n  #?(:cljs (js/console.warn \"unknown-op\" msg)\n     :clj  (log/warn ::unknown-op msg)))\n\n(defn add-extension*\n  [{:keys [extensions] :as state} key {:keys [ops] :as spec}]\n  (when (contains? extensions key)\n    (throw (ex-info \"extension already registered\" {:key key :spec spec})))\n\n  (reduce-kv\n    (fn [state op-kw op-handler]\n      (when (get-in state [:ops op-kw])\n        (throw (ex-info \"op already registered\" {:key key :op op-kw})))\n      (assoc-in state [:ops op-kw] op-handler))\n\n    (assoc-in state [:extensions key] spec)\n    ops))\n\n(defn add-extension [{:keys [state-ref]} key spec]\n  (swap! state-ref add-extension* key spec))\n\n(defn add-defaults [runtime]\n  (add-extension runtime\n    ::defaults\n    {:ops\n     {:welcome #(welcome runtime %)\n      :unknown-relay-op #(unknown-relay-op %)\n      :unknown-op #(unknown-op %)\n      :ping #(ping runtime %)\n      :request-supported-ops #(request-supported-ops runtime %)\n      }}))\n\n(defn del-extension* [state key]\n  (let [ext (get-in state [:extensions key])]\n    (if-not ext\n      state\n      (reduce-kv\n        (fn [state op-kw op-handler]\n          (update-in state [:ops] dissoc op-kw))\n\n        (update state :extensions dissoc key)\n        (:ops ext)))))\n\n(defn del-extension [{:keys [state-ref]} key]\n  (swap! state-ref del-extension* key))\n\n(defn unhandled-call-result [call-config msg]\n  #?(:cljs (js/console.warn \"unhandled call result\" msg call-config)\n     :clj  (log/warn ::unhandled-call-result msg)))\n\n(defn unhandled-client-not-found\n  [{:keys [state-ref] :as runtime} msg]\n  (trigger! runtime :on-client-not-found msg))\n\n(defn reply-unknown-op [runtime msg]\n  (reply runtime msg {:op :unknown-op\n                      :msg msg}))\n\n(defn process [{:keys [state-ref] :as runtime} {:keys [op call-id] :as msg}]\n  ;; (js/console.log \"received from relay\" msg)\n  (let [state @state-ref\n        op-handler (get-in state [:ops op])]\n\n    (cond\n      ;; expecting rpc reply when mid is set\n      call-id\n      (let [cfg (get-in state [:call-handlers call-id])\n            call-handler (get-in cfg [:handlers op])]\n\n        ;; replies may either go to registered call handler\n        ;; or if that is missing to a global op handler\n        (cond\n          call-handler\n          (do (swap! state-ref update :call-handlers dissoc call-id)\n              (call-handler msg))\n\n          op-handler\n          (op-handler msg)\n\n          ;; nothing here to handle it\n          :else\n          (unhandled-call-result cfg msg)))\n\n      op-handler\n      (op-handler msg)\n\n      ;; don't want to reply with unknown-op to client-not-found\n      (= :client-not-found op)\n      (unhandled-client-not-found runtime msg)\n\n      :else\n      (reply-unknown-op runtime msg))))\n\n(defn run-on-idle [state-ref]\n  (doseq [{:keys [on-idle]} (-> @state-ref :extensions vals)\n          :when on-idle]\n    (on-idle)))"]}