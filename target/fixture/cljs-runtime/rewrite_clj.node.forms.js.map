{"version":3,"sources":["rewrite_clj/node/forms.cljc"],"mappings":"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","names":["this__4472__auto__","k__4473__auto__","this__4474__auto__","k151518","else__4475__auto__","G__151522","cljs.core/Keyword","children","cljs.core.get","__extmap","this__4492__auto__","f__4493__auto__","init__4494__auto__","cljs.core.reduce","ret__4495__auto__","p__151524","vec__151525","k__4496__auto__","cljs.core.nth","v__4497__auto__","this__4487__auto__","writer__4488__auto__","opts__4489__auto__","pr-pair__4490__auto__","keyval__4491__auto__","cljs.core/pr-sequential-writer","cljs.core.concat","cljs.core/PersistentVector","G__151517","cljs.core/RecordIter","cljs.core/-iterator","cljs.core/nil-iter","this__4470__auto__","__meta","this__4467__auto__","__hash","this__4476__auto__","cljs.core/count","this__4468__auto__","h__4330__auto__","coll__4469__auto__","cljs.core/hash-unordered-coll","this151519","other151520","cljs.core._EQ_","cljs.core/PROTOCOL_SENTINEL","this__4482__auto__","k__4483__auto__","cljs.core/contains?","cljs.core.dissoc","cljs.core/-with-meta","cljs.core.into","cljs.core/not-empty","this__4479__auto__","G__151541","this__4480__auto__","k__4481__auto__","pred__151545","cljs.core/keyword-identical?","expr__151546","cljs.core.assoc","this__4485__auto__","cljs.core/seq","cljs.core/MapEntry","this__4471__auto__","this__4477__auto__","entry__4478__auto__","cljs.core/vector?","cljs.core/-nth","cljs.core/-conj","rewrite-clj.node.forms/FormsNode","this__4516__auto__","cljs.core/List","writer__4517__auto__","cljs.core/-write","G__151521","extmap__4512__auto__","G__151554","cljs.core/record?","rewrite-clj.node.forms/->FormsNode","rewrite-clj.node.forms/map->FormsNode","_node","opts","es","rewrite_clj.node.protocols.sexprs","cljs.core/next","cljs.core.list_STAR_","cljs.core/first","rewrite-clj.node.protocols/sum-lengths","rewrite-clj.node.protocols/concat-strings","this","children'","node","rewrite-clj.node.protocols/make-printable!","rewrite-clj.node.forms/forms-node"],"sourcesContent":["(ns ^:no-doc rewrite-clj.node.forms\n  (:require [rewrite-clj.node.protocols :as node]))\n\n#?(:clj (set! *warn-on-reflection* true))\n\n;; ## Node\n\n(defrecord FormsNode [children]\n  node/Node\n  (tag [_node] :forms)\n  (node-type [_node] :forms)\n  (printable-only? [_node] false)\n  (sexpr* [_node opts]\n    (let [es (node/sexprs children opts)]\n      (if (next es)\n        (list* 'do es)\n        (first es))))\n  (length [_node]\n    (node/sum-lengths children))\n  (string [_node]\n    (node/concat-strings children))\n\n  node/InnerNode\n  (inner? [_node] true)\n  (children [_node] children)\n  (replace-children [this children']\n    (assoc this :children children'))\n  (leader-length [_node] 0)\n\n  Object\n  (toString [node]\n    (node/string node)))\n\n(node/make-printable! FormsNode)\n\n;; ## Constructor\n\n(defn forms-node\n  \"Create top-level node wrapping multiple `children`.\n   The forms node is equivalent to an implicit `do` at the top-level.\n   \n   ```Clojure\n   (require '[rewrite-clj.node :as n])\n\n   (-> (n/forms-node [(n/token-node 1)\n                      (n/spaces 1)\n                      (n/token-node 2)])\n       n/string)\n   ;; => \\\"1 2\\\"\n   ``` \n   \"\n  [children]\n  (->FormsNode children))\n"]}