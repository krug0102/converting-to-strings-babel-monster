{"version":3,"sources":["matcher_combinators/test.cljc"],"mappings":";AASA,AAAA,AAEA,AAAA,AAEA,AAAA,AAGA,AAAA","names":[],"sourcesContent":["(ns matcher-combinators.test\n  \"Integration with clojure.test or cljs.test (depending on which platform\n  you're running on).\"\n  (:require\n   #?(:cljs [cljs.test    :as t :refer-macros [is are deftest testing]]\n       :clj  [clojure.test :as t :refer        [is are deftest testing]])\n    #?(:cljs [matcher-combinators.cljs-test]\n       :clj  [matcher-combinators.clj-test])))\n\n(declare ^{:arglists '([matcher actual])}\n         match?)\n(declare ^{:arglists '([type->matcher matcher actual])}\n         match-with?)\n(declare ^{:arglists '([matcher actual]\n                       [exception-class matcher actual])}\n         thrown-match?)\n(declare ^{:arglists '([delta matcher actual])}\n         match-roughly?)\n\n#?(:clj\n   (def build-match-assert\n     \"Allows you to define a custom clojure.test match assert:\n\n     `(defmethod clojure.test/assert-expr 'abs-value? [msg form]\n     (build-match-assert 'abs-value? [int? abs-value-matcher] msg form))`\"\n     matcher-combinators.clj-test/build-match-assert))\n"]}