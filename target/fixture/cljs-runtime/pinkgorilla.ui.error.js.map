{"version":3,"sources":["pinkgorilla/ui/error.cljs"],"mappings":";AAUA,sCAAA,tCAAMA,oFAAgBC;AAAtB,AACE,IAAMC,QAAM,gDAAA,hDAACC;IACPC,OAAK,gDAAA,hDAACD;AADZ,AAEE,iCAAA,2CAAA,rEAACE,uJACsB,WAAKJ,MAASA,MAAMK;AAApB,AACE,OAACC,sBAAOH,KAAKE;GAFtC,qGAGgC,WAAKE;AAAL,AACE,AAACD,sBAAOL,MAAMM;;AADhB;GAHhC,yEAMkB,WAAKC;AAAL,AACE,oBAAA,AAAAC,gBAAKR;AAAL,0FAAA,mDAAA;;AAEEO","names":["pinkgorilla.ui.error/error-boundary","_","error","reagent.core.atom","info","reagent.core/create-class","i","cljs.core/reset!","e","comp","cljs.core/deref"],"sourcesContent":["(ns pinkgorilla.ui.error\n  (:require\n   [reagent.core :as reagent]\n      ;[re-catch.core :as rc]\n   ))\n\n\n;; https://github.com/reagent-project/reagent/issues/466\n\n\n(defn error-boundary [_ #_comp]\n  (let [error (reagent/atom nil)\n        info (reagent/atom nil)]\n    (reagent/create-class\n     {:component-did-catch (fn [_ #_this _ #_e i]\n                             (reset! info i))\n      :get-derived-state-from-error (fn [e]\n                                      (reset! error e)\n                                      #js {})\n      :reagent-render (fn [comp]\n                        (if @error\n                          [:div \"Something went wrong.\"]\n                          comp))})))"]}