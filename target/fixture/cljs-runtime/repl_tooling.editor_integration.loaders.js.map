{"version":3,"sources":["repl_tooling/editor_integration/loaders.cljs"],"mappings":"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","names":["p__139131","map__139132","cljs.core/--destructure-map","cljs.core.get","repl-tooling.editor-integration.loaders/eval-code","code","editor-data","notify","evaluate","on-eval","filename","repl-tooling.editor-helpers/*out-on-aux*","G__139133","G__139134","error","G__139135","G__139136","cljs.core.gensym","p__139137","map__139138","repl-tooling.editor-integration.loaders/do-load-file","options","clojure.string/replace","p__139139","map__139140","repl-tooling.editor-integration.loaders/do-load-file-simple","repl-tooling.editor-integration.loaders/load-file","state","map__139142","get-config","repl-kind","temp__5751__auto__","repl-tooling.editor-integration.evaluation/need-cljs?","G__139143","cljs.core._EQ_","G__139148"],"sourcesContent":["(ns repl-tooling.editor-integration.loaders\n  (:refer-clojure :exclude [load-file])\n  (:require [clojure.string :as str]\n            [repl-tooling.editor-helpers :as helpers]\n            [repl-tooling.editor-integration.evaluation :as e-eval]))\n\n(defn- eval-code [code {:keys [editor-data notify evaluate on-eval]}]\n  (let [filename (:filename editor-data)]\n    (set! helpers/*out-on-aux* true)\n    (.. (evaluate {:text code :auto-opts true :aux true})\n        (then #(notify {:type :info :title \"Loaded file\" :message filename}))\n        (catch (fn [error]\n                 (notify {:type :error :title \"Error loading file\" :message filename})\n                 (on-eval {:id (gensym \"load-file\")\n                           :repl nil ; FIXME: get the right REPL\n                           :range [[0 0] [0 0]]\n                           :editor-data editor-data\n                           :result error})))\n        (finally #(set! helpers/*out-on-aux* false)))))\n\n(defn- do-load-file [{:keys [editor-data] :as options}]\n  (let [filename (str/replace (:filename editor-data) \"\\\\\" \"/\")\n        code (str \"(do\"\n                  \" (require 'clojure.string)\"\n                  \" (println \\\"Loading\\\" \\\"\" filename \"\\\")\"\n                  \" (try \"\n                  \"  (let [path \\\"\" filename \"\\\"\"\n                  ;; if target REPL is running on *nix-like O/S...\n                  \"        nix? (clojure.string/starts-with? (System/getProperty \\\"user.dir\\\") \\\"/\\\")\"\n                  ;; ...and the file path looks like Windows...\n                  \"        win? (clojure.string/starts-with? (subs path 1) \\\":/\\\")\"\n                  ;; ...extract the driver letter...\n                  \"        drv  (clojure.string/lower-case (subs path 0 1))\"\n                  ;; ...and map to a Windows Subsystem for Linux mount path:\n                  \"        path (if (and nix? win?) (str \\\"/mnt/\\\" drv (subs path 2)) path)]\"\n                  \"   (clojure.core/load-file path))))\")]\n    (eval-code code options)))\n\n(defn- do-load-file-simple [{:keys [editor-data] :as options}]\n  (let [filename (str/replace (:filename editor-data) \"\\\\\" \"/\")\n        code (str \"(clojure.core/load-file \\\"\" filename \"\\\")\")]\n    (eval-code code options)))\n\n(defn load-file [editor-data state]\n  (let [{:keys [notify get-config on-eval]} (:editor/callbacks state)\n        repl-kind (-> state :repl/info :kind)\n        options {:notify notify\n                 :evaluate (-> state :editor/features :eval)\n                 :on-eval on-eval\n                 :editor-data editor-data}]\n    (if-let [filename (:filename editor-data)]\n      (cond\n        (e-eval/need-cljs? (get-config) filename)\n        (notify {:type :error\n                 :title \"Can't load-file in a CLJS file\"\n                 :message \"ClojureScript files are not supported to load file\"})\n\n        (= :clj repl-kind) (do-load-file options)\n\n        :else (do-load-file-simple options))\n\n      (notify {:type :error\n               :title \"No file to load\"\n               :message (str \"Can't find a file to load. Please, ensure that \"\n                             \"you're editing a saved file.\")}))))\n"]}