{"version":3,"sources":["cljs/core/async/impl/ioc_helpers.cljs"],"mappings":"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","names":["cljs.core.async.impl.ioc-helpers/FN-IDX","cljs.core.async.impl.ioc-helpers/STATE-IDX","cljs.core.async.impl.ioc-helpers/VALUE-IDX","cljs.core.async.impl.ioc-helpers/BINDINGS-IDX","cljs.core.async.impl.ioc-helpers/EXCEPTION-FRAMES","cljs.core.async.impl.ioc-helpers/CURRENT-EXCEPTION","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/aset-object","arr","idx","o","cljs.core.async.impl.ioc-helpers/aget-object","cljs.core.async.impl.ioc-helpers/finished?","state-array","cljs.core/keyword-identical?","cljs.core.async.impl.ioc-helpers/fn-handler","f","js/cljs","js/cljs.core","js/cljs.core.async","js/cljs.core.async.impl","js/cljs.core.async.impl.ioc-helpers","js/cljs.core.async.impl.ioc-helpers.t_cljs$core$async$impl$ioc_helpers148811","cljs.core.async.impl.ioc-helpers/t_cljs$core$async$impl$ioc_helpers148811","_148813","meta148812","cljs.core/PROTOCOL_SENTINEL","this__4461__auto__","writer__4462__auto__","opt__4463__auto__","cljs.core/-write","cljs.core.async.impl.ioc-helpers/->t_cljs$core$async$impl$ioc_helpers148811","_","cljs.core.async.impl.ioc-helpers/run-state-machine","state","fexpr__148814","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","e148815","js/Object","ex","cljs.core.async.impl.ioc-helpers/take!","blk","c","temp__5751__auto__","cb","x","statearr-148820","statearr-148821","cljs.core/deref","cljs.core.async.impl.ioc-helpers/put!","val","ret-val","statearr-148822","statearr-148823","cljs.core.async.impl.ioc-helpers/return-chan","value"],"sourcesContent":[";;   Copyright (c) Rich Hickey and contributors. All rights reserved.\n;;   The use and distribution terms for this software are covered by the\n;;   Eclipse Public License 1.0 (http://opensource.org/licenses/eclipse-1.0.php)\n;;   which can be found in the file epl-v10.html at the root of this distribution.\n;;   By using this software in any fashion, you are agreeing to be bound by\n;;   the terms of this license.\n;;   You must not remove this notice, or any other, from this software.\n\n(ns cljs.core.async.impl.ioc-helpers\n  (:require [cljs.core.async.impl.protocols :as impl])\n  (:require-macros [cljs.core.async.impl.ioc-macros :as ioc]))\n\n(def ^:const FN-IDX 0)\n(def ^:const STATE-IDX 1)\n(def ^:const VALUE-IDX 2)\n(def ^:const BINDINGS-IDX 3)\n(def ^:const EXCEPTION-FRAMES 4)\n(def ^:const CURRENT-EXCEPTION 5)\n(def ^:const USER-START-IDX 6)\n\n(defn aset-object [arr idx o]\n  (aget arr idx o))\n\n(defn aget-object [arr idx]\n  (aget arr idx))\n\n\n(defn finished?\n  \"Returns true if the machine is in a finished state\"\n  [state-array]\n  (keyword-identical? (aget state-array STATE-IDX) :finished))\n\n(defn- fn-handler\n  [f]\n  (reify\n   impl/Handler\n   (active? [_] true)\n   (blockable? [_] true)\n   (commit [_] f)))\n\n\n(defn run-state-machine [state]\n  ((aget-object state FN-IDX) state))\n\n(defn run-state-machine-wrapped [state]\n  (try\n    (run-state-machine state)\n    (catch js/Object ex\n      (impl/close! ^not-native (aget-object state USER-START-IDX))\n      (throw ex))))\n\n(defn take! [state blk ^not-native c]\n  (if-let [cb (impl/take! c (fn-handler\n                                   (fn [x]\n                                     (ioc/aset-all! state VALUE-IDX x STATE-IDX blk)\n                                     (run-state-machine-wrapped state))))]\n    (do (ioc/aset-all! state VALUE-IDX @cb STATE-IDX blk)\n        :recur)\n    nil))\n\n(defn put! [state blk ^not-native c val]\n  (if-let [cb (impl/put! c val (fn-handler (fn [ret-val]\n                                             (ioc/aset-all! state VALUE-IDX ret-val STATE-IDX blk)\n                                             (run-state-machine-wrapped state))))]\n    (do (ioc/aset-all! state VALUE-IDX @cb STATE-IDX blk)\n        :recur)\n    nil))\n\n(defn return-chan [state value]\n  (let [^not-native c (aget state USER-START-IDX)]\n           (when-not (nil? value)\n             (impl/put! c value (fn-handler (fn [] nil))))\n           (impl/close! c)\n           c))\n\n\n"]}