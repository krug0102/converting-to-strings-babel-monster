{"version":3,"sources":["com/wsscode/pathom3/path.cljc"],"mappings":";AAQA,AAAAA,yBAAA,AAAA,gHAAA,AAAA,qrBAAA,AAAAC,6BAAA,mFAAA,qDAAA,oDAAA,wDAAA,6DAAA,AAAA,wdAAA,mFAAA,wHAAA,4JAAA,zDAGeC,yBACDC;AAEd,AAAAH,yBAAA,AAAA,oGAAA,AAAA,8cAAA,AAAAI,6BAAA,AAAA,kWAAA,AAAAC,yDAAA,AAAA,gHAAA,gHAAA,2CAAA,6FAAA,AAAA,iFAAA,oFAAA,WAAAC;AAAA,AAAA,+BAAAA,xBAAsDC;GAAtD,6EAAA,8FAAA,KAAA,0FAAA,AAAA,0WAAA,MAAA,rkBAAsDA;AAEtD,uCAAA,vCAAOC,sFACJC,IAAIC;AADP,AAIE,0DAAA,nDAACC,+CAAOF,wGAAWG,4BAAWF;;AAEhC;;;uCAAA,+CAAAG,tFAAOI;AAAP,AAAA,IAAAH,cAAAD;IAAAC,kBAAA,AAAAC,4BAAAD;WAAA,AAAAE,4CAAAF,gBAAA,nEAEYI;AAFZ,AAIE,OAACC,uBAAOD","names":["cljs.spec.alpha/def-impl","cljs.spec.alpha/or-spec-impl","cljs.core/nat-int?","cljs.core/symbol?","cljs.spec.alpha/nilable-impl","cljs.spec.alpha.every_impl","G__157923","cljs.core/vector?","com.wsscode.pathom3.path/append-path","env","path-entry","cljs.core.update","com.wsscode.misc.coll/vconj","p__157924","map__157926","cljs.core/--destructure-map","cljs.core.get","com.wsscode.pathom3.path/root?","path","cljs.core/empty?"],"sourcesContent":["(ns com.wsscode.pathom3.path\n  (:require\n    [clojure.spec.alpha :as s]\n    [com.fulcrologic.guardrails.core :refer [<- => >def >defn >fdef ? |]]\n    [com.wsscode.misc.coll :as coll]\n    [com.wsscode.pathom3.attribute :as p.attr]\n    [edn-query-language.core :as eql]))\n\n(>def ::path-entry\n  (s/or :attr ::p.attr/attribute\n        :ident ::eql/ident\n        :index nat-int?\n        :call symbol?))\n\n(>def ::path (s/nilable (s/coll-of ::path-entry :kind vector?)))\n\n(>defn append-path\n  [env path-entry]\n  [(s/keys :req [::path]) ::path-entry\n   => map?]\n  (update env ::path coll/vconj path-entry))\n\n(>defn root?\n  \"Check if current path is the root, meaning a blank path.\"\n  [{::keys [path]}]\n  [(s/keys :opt [::path]) => boolean?]\n  (empty? path))\n"]}