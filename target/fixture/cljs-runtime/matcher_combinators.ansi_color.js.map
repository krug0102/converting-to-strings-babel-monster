{"version":3,"sources":["matcher_combinators/ansi_color.cljc"],"mappings":";AAGA,uDAAA,vDAAeA;AAEf,4CAAA,wCAAA,+EAAA,uDAAA,uDAAA,yDAAA,4DAAA,0DAAA,4DAAA,4DAAA,uDAAA,6DAAA,qDAAA,6DAAA,wEAAA,+DAAA,iEAAA,mEAAA,gEAAA,uEAAA,mDAAA,qDAAA,kEAAA,8DAAA,2DAAA,4DAAA,gEAAA,0DAAA,yDAAA,OAAA,OAAA,MAAA,OAAA,OAAA,OAAA,MAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,MAAA,OAAA,OAAA,OAAA,MAAA,OAAA,OAAA,OAAA,OAAA,OAAA,OAAA,MAAA,MAAA,l3DAAKC;AA+BL,2CAAA,3CAAOC,8FAAWC;AAAlB,AACE,oBAAM,iBAAAC,oBAAKJ;AAAL,AAAA,oBAAAI;AAAiBD;;AAAjBC;;;AAAN,AACE,QAAA,qDAAYD;;AADd;;;AAGF,AAAA,6CAAA,qDAAAE,lGAAOM;AAAP,AAAA,IAAAL,qBAAA;AAAA,AAAA,IAAAC,2BAAA,AAAA;AAAA,AAAA,IAAAC,yBAAA;;AAAA,AAAA,GAAA,CAAAA,yBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,gBAAA,CAAAA,yBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAK,gFAAA,CAAA,UAAA,MAAAF;;;AAAA,AAAA,CAAA,kFAAA,lFAAOE,6FAAQM,EAAIC;AAAnB,AACE,QAAK,AAACC,kDAAoB,AAACC,4CAAIlB,yCAAUgB,oDAAQD,GAAE,yCAAA,zCAACf;;;AADtD,CAAA,qEAAA,rEAAOS;;AAAP;AAAA,CAAA,+DAAA,WAAAC,1EAAOD;AAAP,AAAA,IAAAE,YAAA,AAAAC,gBAAAF;IAAAA,gBAAA,AAAAG,eAAAH;AAAA,AAAA,IAAAI,qBAAA;AAAA,AAAA,OAAAA,wDAAAH,UAAAD;;;AAAA,AAGA,AAAA,uCAAA,+CAAAP,tFAAMgB;AAAN,AAAA,IAAAf,qBAAA;AAAA,AAAA,IAAAC,2BAAA,AAAA;AAAA,AAAA,IAAAC,yBAAA;;AAAA,AAAA,GAAA,CAAAA,yBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,gBAAA,CAAAA,yBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAe,0EAAA,CAAA,UAAA,MAAAZ;;;AAAA,AAAA,CAAA,4EAAA,5EAAMY,uFAAOJ,EAAIC;AAAjB,AACE,OAACM,8CAAMb,2CAAOM,EAAE,AAACG,4CAAInB,0CAAWiB;;;AADlC,CAAA,+DAAA,/DAAMG;;AAAN;AAAA,CAAA,yDAAA,WAAAC,pEAAMD;AAAN,AAAA,IAAAE,YAAA,AAAAT,gBAAAQ;IAAAA,gBAAA,AAAAP,eAAAO;AAAA,AAAA,IAAAN,qBAAA;AAAA,AAAA,OAAAA,wDAAAO,UAAAD;;;AAAA,AAGA,2CAAA,3CAAMG,8FAAWC;AAAjB,AACE,OAACC,uGAAM,4CAAK,AAACzB,yCAAU,CAACD,0EAAAA,iFAAAA,TAAWyB,6DAAAA;;AAErC,uCAAA,vCAAME;AAAN,AACE,OAACD,uGAAM,4CAAK,AAACzB,yCAAU,mJAAA,8GAAA,hQAACD,0EAAAA,kIAAAA","names":["matcher-combinators.ansi-color/*use-color*","matcher-combinators.ansi-color/ANSI-CODES","matcher-combinators.ansi-color/ansi-code","code","and__4221__auto__","var_args","args__4835__auto__","len__4829__auto__","i__4830__auto__","argseq__4836__auto__","cljs.core/IndexedSeq","matcher-combinators.ansi-color/style*","seq147922","G__147923","cljs.core/first","cljs.core/next","self__4816__auto__","s","codes","clojure.string.join","cljs.core.map","matcher-combinators.ansi-color/style","seq147926","G__147927","cljs.core.apply","matcher-combinators.ansi-color/set-color","color","cljs.core.print","matcher-combinators.ansi-color/reset"],"sourcesContent":["(ns matcher-combinators.ansi-color\n  \"Colorize console text. Mostly copied from Bruce Hauman's Figwheel project\")\n\n(def ^:dynamic *use-color* true)\n\n(def ANSI-CODES\n  {:reset              \"[0m\"\n   :bright             \"[1m\"\n   :blink-slow         \"[5m\"\n   :underline          \"[4m\"\n   :underline-off      \"[24m\"\n   :inverse            \"[7m\"\n   :inverse-off        \"[27m\"\n   :strikethrough      \"[9m\"\n   :strikethrough-off  \"[29m\"\n\n   :default \"[39m\"\n   :white   \"[37m\"\n   :black   \"[30m\"\n   :red     \"[31m\"\n   :green   \"[32m\"\n   :blue    \"[34m\"\n   :yellow  \"[33m\"\n   :magenta \"[35m\"\n   :cyan    \"[36m\"\n\n   :bg-default \"[49m\"\n   :bg-white   \"[47m\"\n   :bg-black   \"[40m\"\n   :bg-red     \"[41m\"\n   :bg-green   \"[42m\"\n   :bg-blue    \"[44m\"\n   :bg-yellow  \"[43m\"\n   :bg-magenta \"[45m\"\n   :bg-cyan    \"[46m\"})\n\n(defn- ansi-code [code]\n  (when (and *use-color* code)\n    (str \\u001b code)))\n\n(defn- style* [s & codes]\n  (str (clojure.string/join (map ansi-code codes)) s (ansi-code \"[0m\")))\n\n(defn style [s & codes]\n  (apply style* s (map ANSI-CODES codes)))\n\n(defn set-color [color]\n  (print (str (ansi-code (ANSI-CODES color)))))\n\n(defn reset []\n  (print (str (ansi-code (ANSI-CODES :reset)))))\n"]}