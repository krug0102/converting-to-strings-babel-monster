{"version":3,"sources":["malli/registry.cljc"],"mappings":"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","names":["js/goog.define","malli.registry/type","malli$registry$Registry$_schema$dyn","x__4521__auto__","m__4522__auto__","malli.registry/-schema","goog/typeOf","m__4519__auto__","cljs.core/missing-protocol","malli$registry$Registry$_schemas$dyn","malli.registry/-schemas","malli.registry/Registry","this","type","malli.registry/simple-registry","schemas","js/malli","js/malli.registry","js/malli.registry.t_malli$registry159097","malli.registry/t_malli$registry159097","_159099","meta159098","cljs.core/PROTOCOL_SENTINEL","this__4461__auto__","writer__4462__auto__","opt__4463__auto__","cljs.core/-write","malli.registry/->t_malli$registry159097","_","cljs.core.get","malli.registry/registry","?registry","cljs.core/native-satisfies?","cljs.core/map?","malli.registry/registry*","cljs.core.atom","malli.registry/set-default-registry!","cljs.core/reset!","cljs.core.ex_info","malli.registry/custom-default-registry","js/malli.registry.t_malli$registry159101","malli.registry/t_malli$registry159101","_159103","meta159102","malli.registry/->t_malli$registry159101","cljs.core/deref","var_args","args__4835__auto__","len__4829__auto__","i__4830__auto__","argseq__4836__auto__","cljs.core/IndexedSeq","malli.registry/composite-registry","seq159105","self__4817__auto__","cljs.core/seq","?registries","registries","cljs.core.mapv","js/malli.registry.t_malli$registry159106","malli.registry/t_malli$registry159106","_159108","meta159107","malli.registry/->t_malli$registry159106","p1__159104#","cljs.core/some","cljs.core.reduce","cljs.core/merge","cljs.core.map","cljs.core/reverse","malli.registry/mutable-registry","db","js/malli.registry.t_malli$registry159109","malli.registry/t_malli$registry159109","_159111","meta159110","malli.registry/->t_malli$registry159109","malli.registry/*registry*","malli.registry/dynamic-registry","js/malli.registry.t_malli$registry159112","malli.registry/t_malli$registry159112","_159114","meta159113","malli.registry/->t_malli$registry159112","malli.registry/lazy-registry","default-registry","provider","cache*","registry*","malli.registry.composite_registry","js/malli.registry.t_malli$registry159123","malli.registry/t_malli$registry159123","_159125","meta159124","malli.registry/->t_malli$registry159123","name","or__4223__auto__","fexpr__159130","temp__5753__auto__","schema","G__159131","G__159132","cljs.core.swap_BANG_","cljs.core/assoc","malli.registry/schema","registry","malli.registry/schemas"],"sourcesContent":["(ns malli.registry\n  (:refer-clojure :exclude [type]))\n\n#?(:cljs (goog-define type \"default\")\n   :clj  (def type (as-> (or (System/getProperty \"malli.registry/type\") \"default\") $ (.intern $))))\n\n(defprotocol Registry\n  (-schema [this type] \"returns the schema from a registry\")\n  (-schemas [this] \"returns all schemas from a registry\"))\n\n(defn simple-registry [schemas]\n  (reify\n    Registry\n    (-schema [_ type] (get schemas type))\n    (-schemas [_] schemas)))\n\n(defn registry [?registry]\n  (cond (satisfies? Registry ?registry) ?registry\n        (map? ?registry) (simple-registry ?registry)))\n\n;;\n;; custom\n;;\n\n(def ^:private registry* (atom (registry {})))\n\n(defn set-default-registry! [?registry]\n  (if (identical? type \"custom\")\n    (reset! registry* (registry ?registry))\n    (throw (ex-info \"can't set default registry\" {:type type}))))\n\n(defn ^:no-doc custom-default-registry []\n  (reify\n    Registry\n    (-schema [_ type] (-schema @registry* type))\n    (-schemas [_] (-schemas @registry*))))\n\n(defn composite-registry [& ?registries]\n  (let [registries (mapv registry ?registries)]\n    (reify\n      Registry\n      (-schema [_ type] (some #(-schema % type) registries))\n      (-schemas [_] (reduce merge (map -schemas (reverse registries)))))))\n\n(defn mutable-registry [db]\n  (reify\n    Registry\n    (-schema [_ type] (-schema (registry @db) type))\n    (-schemas [_] (-schemas (registry @db)))))\n\n(def ^:dynamic *registry* {})\n\n(defn dynamic-registry []\n  (reify\n    Registry\n    (-schema [_ type] (-schema (registry *registry*) type))\n    (-schemas [_] (-schemas (registry *registry*)))))\n\n(defn lazy-registry [default-registry provider]\n  (let [cache* (atom {})\n        registry* (atom default-registry)]\n    (reset!\n      registry*\n      (composite-registry\n        default-registry\n        (reify\n          Registry\n          (-schema [_ name]\n            (or (@cache* name)\n                (when-let [schema (provider name @registry*)]\n                  (swap! cache* assoc name schema)\n                  schema)))\n          (-schemas [_] @cache*))))))\n\n(defn schema\n  \"finds a schema from a registry\"\n  [registry type]\n  (-schema registry type))\n\n(defn schemas\n  \"finds all schemas from a registry\"\n  [registry]\n  (-schemas registry))\n"]}